Answers:

(i) False. Typically, the system idle process halts the CPU till the next interrupt. If the 'hlt' instruction is privileged (which is the case in x86), there will be a trap into the OS and will defeat the purpose unless the OS handles this fault and puts the CPU onto halt mode. (Arguing true with the above logic is also fine)

(ii) True. If the kernel stack of the parent is not replicated, the saved user state of the parent process (at the time of fork) will not be copied to the child process. This will result in child not resuming at the
     same point as the parent and will break the fork() semantics.

(iii) False. Even if the OS uses a separate address space, the OS entry points (configured into the IDT) should be mapped to the user address space such that it is only accessible only from the OS mode. Otherwise, entry into the OS will not be possible.

(iv) True. Even with periodic priority boost, the smart user can yield the CPU just before the expiry of its time quantum and remain in the highest priority for ever.
